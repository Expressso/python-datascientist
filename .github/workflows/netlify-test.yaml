name: Deploy website to Netlify and build notebooks

on:
  pull_request:
    branches:
      - main
      - master
      - dev

jobs:
  markdownise-manipulation:
    name: Partie manipulation
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:manipulation
    steps:
      - uses: linogaliana/python-datascientist-actions/compilermd@v1.0.5
        with:
          directory-name: 'manipulation'
  markdownise-visualisation:
    name: Partie visualisation
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:visualisation
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Check python installed
        run: |
          conda info
          conda list
      - name: Build to md
        run: |
          git diff --name-only origin/master origin/${GITHUB_HEAD_REF} -- ./content/course/visualisation >> diff.txt
          cat diff.txt
          Rscript -e 'source("./build/build_light.R")'
      - uses: actions/upload-artifact@v2
        with:
          name: md-visualisation
          path: ./content/course/visualisation
          retention-days: 1
  markdownise-modelisation:
    name: Partie modélisation
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:modelisation
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Check python installed
        run: |
          conda info
          conda list
      - name: Build to md
        run: |
          git diff --name-only origin/master origin/${GITHUB_HEAD_REF} -- ./content/course/modelisation >> diff.txt
          cat diff.txt
          Rscript -e 'source("./build/build_light.R")'
      - uses: actions/upload-artifact@v2
        with:
          name: md-modelisation
          path: ./content/course/modelisation
          retention-days: 1
  markdownise-nlp:
    name: Partie NLP
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:nlp
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Check python installed
        run: |
          conda info
          conda list
      - name: Build to md
        run: |
          git diff --name-only origin/master origin/${GITHUB_HEAD_REF} -- ./content/course/NLP >> diff.txt
          cat diff.txt
          Rscript -e 'source("./build/build_light.R")'
      - uses: actions/upload-artifact@v2
        with:
          name: md-nlp
          path: ./content/course/NLP
          retention-days: 1
  markdownise-reste:
    name: Markdown non thématiques
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:minimal
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Check python installed
        run: |
          conda info
          conda list
      - name: Build to md
        run: |
          rm -rf manipulation/ visualisation/ modelisation/ NLP/
          git diff --name-only origin/master origin/${GITHUB_HEAD_REF} >> diff.txt
          cat diff.txt
          Rscript -e 'source("./build/build_light.R")'
      - uses: actions/upload-artifact@v2
        with:
          name: md-reste
          path: ./content/course/*.md
          retention-days: 1
  deploy:
    name: Render-Blog
    needs: [markdownise-manipulation, markdownise-visualisation, markdownise-modelisation,markdownise-nlp, markdownise-reste]
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/download-artifact@v2
        with:
          name: md-reste
          path: ./content/course
      - uses: actions/download-artifact@v2
        with:
          name: md-manipulation
          path: ./content/course/manipulation
      - uses: actions/download-artifact@v2
        with:
          name: md-visualisation
          path: ./content/course/visualisation
      - uses: actions/download-artifact@v2
        with:
          name: md-modelisation
          path: ./content/course/modelisation
      - uses: actions/download-artifact@v2
        with:
          name: md-nlp
          path: ./content/course/NLP
      - name: Clean files with Python function
        run: |
         rm -rf "./temp"
         mkdir -p temp
         mkdir -p notebooks
         pip install matplotlib wordcloud nltk
         python build/cleanmd.py
         python build/wc_website.py
      - name: Check hugo installed
        run: |
          Rscript -e 'blogdown::install_hugo("0.83.0", force = TRUE)'
          Rscript -e 'print(blogdown:::hugo_version())'
      - name: Render blog
        run: |
          Rscript -e 'source("./build/netlify.R")'
      - name: Install npm
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/setup-node@v2          
        with:
          node-version: '12'        
      - name: Deploy to Netlify
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          BRANCHE_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          npm init -y
          npm install --unsafe-perm=true netlify-cli -g
          netlify init
          netlify deploy --alias=${BRANCHE_REF} --dir="public" --message "Preview deploy from ${BRANCHE_REF}"
      - uses: actions/upload-artifact@v2
        with:
          name: Website
          path: public/
      - name: Convert in ipynb with Jupytext
        run: |
         pip install jupytext
         cd ./temp
         for i in $(find . -type f \( -iname "*.Rmd" \)); do \
            j="${i%.Rmd}.md" ;
            echo "$j" ;
            if [ -e $j ]
            then
              echo "Converting $j"; \
              #jupytext --to py --execute "$i"
              jupytext --to ipynb "$j" ;
              k="${j%.md}.ipynb" ;
            fi            
         done
         mkdir -p ../notebooks
         cp -R . ../notebooks
         cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: Notebooks
          path: temp/
      - name: Commit new notebooks
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          BRANCHE_REF: ${{ github.event.pull_request.head.ref }}
        run: |
         git config user.name 'github-actions[bot]'
         git config user.email 'github-actions[bot]@users.noreply.github.com'
         # git config user.email github-actions@github.com
         #git checkout ${BRANCHE_REF}
         git status
         git add notebooks/**/*.ipynb;
         git commit -m "Automated changes";
         git pull
         git push
  corrections:
    runs-on: ubuntu-latest
    container: linogaliana/python-datascientist:latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Install rmarkdown
        env:
          GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
        run: |
          Rscript -e 'remotes::install_github("yihui/xfun")'
          Rscript -e 'remotes::install_github("yihui/knitr")'
          Rscript -e 'install.packages(c("rmarkdown"))'
      - name: Install Python
        run: |
          Rscript -e "install.packages(c('remotes', 'reticulate'))"
          Rscript -e "install.packages(c('here'))"
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Modif Rmd echo status
        run: |
         python build/modifmd.py
      - name: Build to md
        run: |
          git diff --name-only origin/master origin/${GITHUB_HEAD_REF} >> diff.txt
          cat diff.txt
          Rscript -e 'source("./build/build_light.R")'
      - name: Clean files with Python function
        run: |
         rm -rf "./temp"
         mkdir -p temp
         mkdir -p corrections
         python build/cleanmd.py
      - name: Convert in ipynb with Jupytext
        run: |
         pip install jupytext
         cd ./temp
         for i in $(find . -type f \( -iname "*.Rmd" \)); do \
            j="${i%.Rmd}.md" ;
            echo "$j" ;
            if [ -e $j ]
            then
              echo "Converting $j"; \
              #jupytext --to py --execute "$i"
              jupytext --to ipynb "$j" ;
              k="${j%.md}.ipynb" ;
            fi            
         done
         mkdir -p ../corrections
         cp -R . ../corrections
         cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: Corrections
          path: corrections/
      - name: Commit new notebooks
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          BRANCHE_REF: ${{ github.event.pull_request.head.ref }}
        run: |
         git config user.name 'github-actions[bot]'
         git config user.email 'github-actions[bot]@users.noreply.github.com'
         # git config user.email github-actions@github.com
         #git checkout ${BRANCHE_REF}
         git status
         git add corrections/**/*.ipynb;
         git commit -m "Automated changes";
         git pull
         git push

